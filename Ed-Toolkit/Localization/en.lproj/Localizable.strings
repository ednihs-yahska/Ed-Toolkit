/* 
  Localizable.strings
  Ed-Toolkit

  Created by Akshay Shinde on 6/22/25.
*/

// MARK: - URL Encoder/Decoder View
"url_encoder_decoder.title" = "URL Encoder/Decoder";
"url_encoder_decoder.input_label" = "Input:";
"url_encoder_decoder.output_label" = "Output:";
"url_encoder_decoder.mode_label" = "Mode";
"url_encoder_decoder.encode" = "Encode";
"url_encoder_decoder.decode" = "Decode";

// MARK: - Keyboard Shortcuts
"url_encoder_decoder.shortcuts_help" = "⌘E/⌘D: Process text • ⌘M: Switch mode • ⌘R: Switch and process";
"url_encoder_decoder.shortcuts_help_accessibility" = "Command E or Command D to process text, Command M to switch between encode and decode modes, Command R to switch mode and process immediately";

// MARK: - Accessibility Labels
"url_encoder_decoder.accessibility.title" = "URL Encoder and Decoder Tool";
"url_encoder_decoder.accessibility.shortcuts_help" = "Keyboard shortcuts help";
"url_encoder_decoder.accessibility.mode_picker" = "Processing mode";
"url_encoder_decoder.accessibility.input_label" = "Input text";
"url_encoder_decoder.accessibility.output_label" = "Output result";
"url_encoder_decoder.accessibility.main_view" = "URL Encoder Decoder";

// MARK: - Accessibility Hints
"url_encoder_decoder.accessibility.mode_hint" = "Choose whether to encode or decode the input text. Press Command M to toggle between modes.";
"url_encoder_decoder.accessibility.input_hint_encode" = "Enter the text you want to URL encode. Use Command+E to encode, Command+M to switch to decode mode, or Command+R to switch mode and process immediately.";
"url_encoder_decoder.accessibility.input_hint_decode" = "Enter the URL encoded text you want to decode. Use Command+D to decode, Command+M to switch to encode mode, or Command+R to switch mode and process immediately.";
"url_encoder_decoder.accessibility.process_hint_encode" = "Converts the input text to URL encoded format. Use Tab to navigate to output field.";
"url_encoder_decoder.accessibility.process_hint_decode" = "Converts the URL encoded input back to readable text. Use Tab to navigate to output field.";
"url_encoder_decoder.accessibility.output_hint" = "The processed output. This field is read-only and not editable.";

// MARK: - Accessibility Values and Labels
"url_encoder_decoder.accessibility.text_to_encode" = "Text to encode";
"url_encoder_decoder.accessibility.text_to_decode" = "Text to decode";
"url_encoder_decoder.accessibility.encoded_result" = "Encoded result";
"url_encoder_decoder.accessibility.decoded_result" = "Decoded result";
"url_encoder_decoder.accessibility.encode_button" = "Encode text";
"url_encoder_decoder.accessibility.decode_button" = "Decode text";
"url_encoder_decoder.accessibility.no_output" = "No output yet";

// MARK: - Status Announcements
"url_encoder_decoder.status.switched_to_encode" = "Switched to encode mode";
"url_encoder_decoder.status.switched_to_decode" = "Switched to decode mode";
"url_encoder_decoder.status.encoded_success" = "Text encoded successfully, result has %d characters";
"url_encoder_decoder.status.decoded_success" = "Text decoded successfully, result has %d characters";
"url_encoder_decoder.status.encoding_failed" = "Encoding failed";
"url_encoder_decoder.status.decoding_failed" = "Decoding failed - invalid input";
"url_encoder_decoder.status.no_input" = "No input to process";

// MARK: - Button Labels (Hidden shortcuts)
"url_encoder_decoder.switch_mode" = "Switch Mode";
"url_encoder_decoder.switch_and_process" = "Switch and Process";

// MARK: - Accessibility Actions
"url_encoder_decoder.action.show_shortcuts" = "Show keyboard shortcuts";
"url_encoder_decoder.action.repeat_shortcuts" = "Repeat shortcuts";
"url_encoder_decoder.accessibility.help_info" = "Help information";
"url_encoder_decoder.accessibility.shortcuts_available" = "Available keyboard shortcuts: Command E to encode text, Command D to decode text, Command M to switch between encode and decode modes, Command R to switch mode and process text immediately";

// MARK: - Diff Matcher View
"diff_matcher.title" = "Diff Matcher";
"diff_matcher.subtitle" = "Compare two texts and see the differences";
"diff_matcher.original_text" = "Original Text";
"diff_matcher.modified_text" = "Modified Text";
"diff_matcher.compare" = "Compare";
"diff_matcher.back_to_input" = "Back to Input";

// MARK: - Diff Matcher Statistics
"diff_matcher.additions" = "additions";
"diff_matcher.deletions" = "deletions";
"diff_matcher.additions_count" = "%d additions";
"diff_matcher.deletions_count" = "%d deletions";
"diff_matcher.diff_summary" = "Found %d additions and %d deletions";

// MARK: - Diff Matcher Accessibility
"diff_matcher.accessibility.title" = "Text Difference Comparison Tool";
"diff_matcher.accessibility.subtitle" = "Compare two texts and see the differences";
"diff_matcher.accessibility.original_text_editor" = "Original text input area";
"diff_matcher.accessibility.modified_text_editor" = "Modified text input area";
"diff_matcher.accessibility.compare_button" = "Compare texts";
"diff_matcher.accessibility.back_button" = "Back to input view";
"diff_matcher.accessibility.results_view" = "Comparison results";
"diff_matcher.accessibility.diff_line" = "Difference line";
"diff_matcher.accessibility.main_view" = "Diff Matcher";

// MARK: - Diff Matcher Accessibility Hints
"diff_matcher.accessibility.original_text_hint" = "Enter the original text that you want to compare. This will be shown as the baseline for comparison.";
"diff_matcher.accessibility.modified_text_hint" = "Enter the modified text that you want to compare against the original. Changes will be highlighted in the results.";
"diff_matcher.accessibility.compare_hint" = "Process both texts and show the differences. Additions will be shown in green, deletions in red.";
"diff_matcher.accessibility.back_hint" = "Return to the input view to modify the texts for comparison.";
"diff_matcher.accessibility.results_hint" = "Shows line-by-line comparison with additions in green and deletions in red.";

// MARK: - Diff Matcher Status Messages
"diff_matcher.accessibility.no_changes" = "No differences found between the texts";
"diff_matcher.accessibility.changes_found" = "Differences found and highlighted";
"diff_matcher.accessibility.empty_input" = "Please enter text in both fields to compare";
"diff_matcher.accessibility.returned_to_input" = "Returned to input view";
"diff_matcher.accessibility.all_text_cleared" = "All text cleared";
"diff_matcher.accessibility.texts_swapped" = "Text areas swapped";
"diff_matcher.accessibility.keyboard_shortcuts" = "⌘R: Compare texts • ⌘B: Back to input • ⌘K: Clear all • ⌘S: Swap texts • ⌘⌥→/←: Navigate between text areas";

// MARK: - JSON Formatter View
"json_formatter.title" = "JSON Formatter";
"json_formatter.subtitle" = "Parse and visualize JSON structure";
"json_formatter.input_label" = "Input JSON";
"json_formatter.structure_label" = "JSON Structure";
"json_formatter.placeholder_text" = "Paste JSON to see structure";

// MARK: - JSON Formatter Error Messages
"json_formatter.invalid_input" = "Invalid input";
"json_formatter.invalid_json_prefix" = "Invalid JSON:";

// MARK: - JSON Formatter Types
"json_formatter.object_type" = "Object";
"json_formatter.array_type" = "Array";
"json_formatter.string_type" = "String";
"json_formatter.number_type" = "Number";
"json_formatter.boolean_type" = "Boolean";
"json_formatter.null_type" = "Null";

// MARK: - JSON Formatter Actions
"json_formatter.expand" = "Expand";
"json_formatter.collapse" = "Collapse";
"json_formatter.expand_all" = "Expand All";
"json_formatter.collapse_all" = "Collapse All";
"json_formatter.clear" = "Clear";
"json_formatter.format" = "Format";

// MARK: - JSON Formatter Dynamic Content
"json_formatter.object_count" = "Object with %d properties";
"json_formatter.array_count" = "Array with %d items";
"json_formatter.node_with_key" = "%@ key containing %@";
"json_formatter.node_without_key" = "Root %@";

// MARK: - JSON Formatter Accessibility
"json_formatter.accessibility.title" = "JSON Parser and Formatter Tool";
"json_formatter.accessibility.subtitle" = "Parse and visualize JSON structure";
"json_formatter.accessibility.input_editor" = "JSON input text area";
"json_formatter.accessibility.structure_view" = "JSON structure tree view";
"json_formatter.accessibility.error_view" = "JSON parsing error message";
"json_formatter.accessibility.placeholder_view" = "Empty state placeholder";
"json_formatter.accessibility.main_view" = "JSON Formatter";

// MARK: - JSON Formatter Node Accessibility
"json_formatter.accessibility.expand_button" = "Expand node";
"json_formatter.accessibility.collapse_button" = "Collapse node";
"json_formatter.accessibility.json_node" = "JSON node";
"json_formatter.accessibility.object_node" = "JSON object";
"json_formatter.accessibility.array_node" = "JSON array";
"json_formatter.accessibility.value_node" = "JSON value";

// MARK: - JSON Formatter Accessibility Hints
"json_formatter.accessibility.input_hint" = "Enter or paste JSON text to parse and visualize its structure. Real-time parsing will show results immediately.";
"json_formatter.accessibility.structure_hint" = "Navigate through the JSON structure. Objects and arrays can be expanded or collapsed.";
"json_formatter.accessibility.node_hint" = "Click or press Space to expand or collapse this node.";
"json_formatter.accessibility.expand_hint" = "Expand to show child elements.";
"json_formatter.accessibility.collapse_hint" = "Collapse to hide child elements.";

// MARK: - JSON Formatter Status Messages
"json_formatter.accessibility.json_parsed" = "JSON parsed successfully";
"json_formatter.accessibility.parse_error" = "JSON parsing failed";
"json_formatter.accessibility.empty_input" = "No JSON input provided";
"json_formatter.accessibility.keyboard_shortcuts" = "⌘K: Clear input • ⌘F: Format JSON • Space: Expand/collapse node";